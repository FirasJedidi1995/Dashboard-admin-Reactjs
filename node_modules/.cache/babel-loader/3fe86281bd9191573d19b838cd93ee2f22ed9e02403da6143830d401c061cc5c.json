{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\Dashboard Admin\\\\dashboard\\\\src\\\\Components\\\\Regions\\\\Regions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, Button, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Regions = () => {\n  _s();\n  // Example data\n  const [regions, setRegions] = useState([{\n    id: 1,\n    name: \"Sousse\",\n    villes: [\"Sousse City\", \"Hammam Sousse\", \"Kalaâ Kebira\"]\n  }, {\n    id: 2,\n    name: \"Tunis\",\n    villes: [\"Tunis\", \"Carthage\", \"La Marsa\"]\n  }]);\n  const [showForm, setShowForm] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [selectedRegionId, setSelectedRegionId] = useState(null);\n  const handleDeleteClick = regionId => {\n    setSelectedCategorieId(regionId);\n    setShowToast(true);\n  };\n  const confirmDeletion = () => {\n    setRegions(currentRegions => currentRegions.filter(region => region.id !== selectedRegionId));\n    setShowToast(false);\n    setSelectedRegionId(null);\n  };\n  const addRegion = (regionName, villes = []) => {\n    // Assume categories are optionally passed\n    const newId = regions.length > 0 ? Math.max(...regions.map(r => r.id)) + 1 : 1;\n    setRegions([...regions, {\n      id: newId,\n      name: regionName,\n      categories\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-4\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nom Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Villes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: regions.map(region => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: region.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: region.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: region.cities.join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                className: \"mx-2\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                className: \"mx-2\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                className: \"mx-2\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, region.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Regions, \"TlC7RULAh4U3j1elL6S1eOQ2l0I=\");\n_c = Regions;\nexport default Regions;\nvar _c;\n$RefreshReg$(_c, \"Regions\");","map":{"version":3,"names":["React","useState","Table","Button","Container","jsxDEV","_jsxDEV","Regions","_s","regions","setRegions","id","name","villes","showForm","setShowForm","showToast","setShowToast","selectedRegionId","setSelectedRegionId","handleDeleteClick","regionId","setSelectedCategorieId","confirmDeletion","currentRegions","filter","region","addRegion","regionName","newId","length","Math","max","map","r","categories","children","className","bordered","hover","fileName","_jsxFileName","lineNumber","columnNumber","cities","join","variant","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/Dashboard Admin/dashboard/src/Components/Regions/Regions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Table, Button, Container } from \"react-bootstrap\";\r\n\r\nconst Regions = () => {\r\n  // Example data\r\n  const [regions,setRegions] =useState ([\r\n    {\r\n      id: 1,\r\n      name: \"Sousse\",\r\n      villes: [\"Sousse City\", \"Hammam Sousse\", \"Kalaâ Kebira\"],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Tunis\",\r\n      villes: [\"Tunis\", \"Carthage\", \"La Marsa\"],\r\n    },\r\n  ]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [selectedRegionId, setSelectedRegionId] = useState(null);\r\n\r\n  const handleDeleteClick = (regionId) => {\r\n    setSelectedCategorieId(regionId);\r\n    setShowToast(true);\r\n  };\r\n\r\n  const confirmDeletion = () => {\r\n    setRegions((currentRegions) =>\r\n    currentRegions.filter(\r\n        (region) => region.id !== selectedRegionId\r\n      )\r\n    );\r\n    setShowToast(false);\r\n    setSelectedRegionId(null);\r\n  };\r\n  const addRegion = (regionName, villes = []) => {  // Assume categories are optionally passed\r\n    const newId = regions.length > 0 ? Math.max(...regions.map((r) => r.id)) + 1 : 1;\r\n    setRegions([...regions, { id: newId, name: regionName, categories }]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"py-4\">\r\n        <Table bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Nom Region</th>\r\n              <th>Villes</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {regions.map(region => (\r\n              <tr key={region.id}>\r\n                <td>{region.id}</td>\r\n                <td>{region.name}</td>\r\n                <td>{region.cities.join(\", \")}</td> {/* Display cities as a comma-separated list */}\r\n                <td>\r\n                  <Button variant=\"primary\" className=\"mx-2\">View</Button>\r\n                  <Button variant=\"outline-primary\" className=\"mx-2\">Edit</Button>\r\n                  <Button variant=\"danger\" className=\"mx-2\">Delete</Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\nexport default Regions;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAET,QAAQ,CAAE,CACpC;IACEU,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,QAAQ;IACdC,MAAM,EAAE,CAAC,aAAa,EAAE,eAAe,EAAE,cAAc;EACzD,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,MAAM,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU;EAC1C,CAAC,CACF,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMmB,iBAAiB,GAAIC,QAAQ,IAAK;IACtCC,sBAAsB,CAACD,QAAQ,CAAC;IAChCJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5Bb,UAAU,CAAEc,cAAc,IAC1BA,cAAc,CAACC,MAAM,CAChBC,MAAM,IAAKA,MAAM,CAACf,EAAE,KAAKO,gBAC5B,CACF,CAAC;IACDD,YAAY,CAAC,KAAK,CAAC;IACnBE,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EACD,MAAMQ,SAAS,GAAGA,CAACC,UAAU,EAAEf,MAAM,GAAG,EAAE,KAAK;IAAG;IAChD,MAAMgB,KAAK,GAAGpB,OAAO,CAACqB,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGvB,OAAO,CAACwB,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACvB,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IAChFD,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAAEE,EAAE,EAAEkB,KAAK;MAAEjB,IAAI,EAAEgB,UAAU;MAAEO;IAAW,CAAC,CAAC,CAAC;EACvE,CAAC;EAED,oBACE7B,OAAA,CAACF,SAAS;IAAAgC,QAAA,eACR9B,OAAA;MAAK+B,SAAS,EAAC,MAAM;MAAAD,QAAA,eACnB9B,OAAA,CAACJ,KAAK;QAACoC,QAAQ;QAACC,KAAK;QAAAH,QAAA,gBACnB9B,OAAA;UAAA8B,QAAA,eACE9B,OAAA;YAAA8B,QAAA,gBACE9B,OAAA;cAAA8B,QAAA,EAAI;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXrC,OAAA;cAAA8B,QAAA,EAAI;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBrC,OAAA;cAAA8B,QAAA,EAAI;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfrC,OAAA;cAAA8B,QAAA,EAAI;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRrC,OAAA;UAAA8B,QAAA,EACG3B,OAAO,CAACwB,GAAG,CAACP,MAAM,iBACjBpB,OAAA;YAAA8B,QAAA,gBACE9B,OAAA;cAAA8B,QAAA,EAAKV,MAAM,CAACf;YAAE;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBrC,OAAA;cAAA8B,QAAA,EAAKV,MAAM,CAACd;YAAI;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBrC,OAAA;cAAA8B,QAAA,EAAKV,MAAM,CAACkB,MAAM,CAACC,IAAI,CAAC,IAAI;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,KAAC,eACpCrC,OAAA;cAAA8B,QAAA,gBACE9B,OAAA,CAACH,MAAM;gBAAC2C,OAAO,EAAC,SAAS;gBAACT,SAAS,EAAC,MAAM;gBAAAD,QAAA,EAAC;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxDrC,OAAA,CAACH,MAAM;gBAAC2C,OAAO,EAAC,iBAAiB;gBAACT,SAAS,EAAC,MAAM;gBAAAD,QAAA,EAAC;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAChErC,OAAA,CAACH,MAAM;gBAAC2C,OAAO,EAAC,QAAQ;gBAACT,SAAS,EAAC,MAAM;gBAAAD,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD,CAAC;UAAA,GAREjB,MAAM,CAACf,EAAE;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASd,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACnC,EAAA,CAnEID,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AAsEb,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}